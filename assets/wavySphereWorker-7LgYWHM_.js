var C=typeof Float32Array<"u"?Float32Array:Array;Math.hypot||(Math.hypot=function(){for(var n=0,t=arguments.length;t--;)n+=arguments[t]*arguments[t];return Math.sqrt(n)});function A(){var n=new C(3);return C!=Float32Array&&(n[0]=0,n[1]=0,n[2]=0),n}function E(n){var t=new C(3);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t}function m(n,t,o){var s=new C(3);return s[0]=n,s[1]=t,s[2]=o,s}function j(n,t,o){return n[0]=t[0]-o[0],n[1]=t[1]-o[1],n[2]=t[2]-o[2],n}function W(n,t,o){return n[0]=t[0]*o,n[1]=t[1]*o,n[2]=t[2]*o,n}function X(n,t,o,s){return n[0]=t[0]+o[0]*s,n[1]=t[1]+o[1]*s,n[2]=t[2]+o[2]*s,n}function z(n,t){var o=t[0],s=t[1],a=t[2],c=o*o+s*s+a*a;return c>0&&(c=1/Math.sqrt(c)),n[0]=t[0]*c,n[1]=t[1]*c,n[2]=t[2]*c,n}function R(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function b(n,t,o){var s=t[0],a=t[1],c=t[2],d=o[0],e=o[1],i=o[2];return n[0]=a*i-c*e,n[1]=c*d-s*i,n[2]=s*e-a*d,n}var G=j;(function(){var n=A();return function(t,o,s,a,c,d){var e,i;for(o||(o=3),s||(s=0),a?i=Math.min(a*o+s,t.length):i=t.length,e=s;e<i;e+=o)n[0]=t[e],n[1]=t[e+1],n[2]=t[e+2],c(n,n,d),t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2];return t}})();function _(n,t,o){const s=E(n),a=E(t);z(s,s),z(a,a);const c=Math.abs(s[0])<.9?m(1,0,0):m(0,1,0),d=b(A(),s,c);z(d,d);const e=R(a,d),i=b(A(),d,a),g=R(i,s),l=(Math.atan2(g,e)+Math.PI)/(2*Math.PI),r=Math.round(l*32767)&32767;return(o>0?1:0)<<15|r}function $(n){n=n%(2*Math.PI),n>Math.PI?n-=2*Math.PI:n<-Math.PI&&(n+=2*Math.PI);const t=-.16666667,o=.008333333,s=-198413e-9,a=n*n,c=a*n;return n+t*c+o*c*a+s*c*a*a}function H(n){return $(n+Math.PI/2)}function J(n,t){const o=E(t);z(o,o);const s=n>>15&1,c=(n&32767)/32767*(2*Math.PI)-Math.PI,d=Math.abs(o[0])<.9?m(1,0,0):m(0,1,0),e=b(A(),o,d);z(e,e);const i=H(c),g=$(c),h=A(),l=A();return W(h,e,i),b(l,o,e),X(h,h,l,g),z(h,h),[h,s]}function K(n,t){const o=E(t);z(o,o);const s=n>>15&1,c=(n&32767)/32767*(2*Math.PI)-Math.PI,d=Math.abs(o[0])<.9?m(1,0,0):m(0,1,0),e=b(A(),o,d);z(e,e);const i=Math.cos(c),g=Math.sin(c),h=A(),l=A();return W(h,e,i),b(l,o,e),X(h,h,l,g),z(h,h),[h,s]}function Q(n,t,o){const s=_(n,t,o),[a,c]=K(s,n),[d,e]=J(s,n),i=R(t,a),g=Math.acos(Math.min(1,Math.max(-1,i)));console.log("Encoding test results:"),console.log("Original tangent:",Array.from(t)),console.log("Regular Decoded tangent:",Array.from(a)),console.log("Regular Angle error (radians):",g),console.log("Regular Sign preserved:",o===c);const h=R(t,d),l=Math.acos(Math.min(1,Math.max(-1,h)));console.log("Optimized Decoded tangent:",Array.from(d)),console.log("Optimized Angle error (radians):",l),console.log("Optimized Sign preserved:",o===e)}{const n=m(0,1,0),t=m(1,0,0);Q(n,t,1)}function Z(n,t,o,s,a,c,d){const e=new Uint16Array(n*8),i=m(1/0,1/0,1/0),g=m(-1/0,-1/0,-1/0);for(let l=0;l<t.length;l+=3)i[0]=Math.min(i[0],t[l]),i[1]=Math.min(i[1],t[l+1]),i[2]=Math.min(i[2],t[l+2]),g[0]=Math.max(g[0],t[l]),g[1]=Math.max(g[1],t[l+1]),g[2]=Math.max(g[2],t[l+2]);const h=G(A(),g,i);for(let l=0;l<n;l++){const r=l*3,f=l*4,V=l*2,p=l*8,M=(t[r]-i[0])/h[0],y=(t[r+1]-i[1])/h[1],u=(t[r+2]-i[2])/h[2];e[p]=M*65535,e[p+1]=y*65535,e[p+2]=u*65535;const v=m(o[r],o[r+1],o[r+2]),x=m(s[f],s[f+1],s[f+2]),q=s[f+3]>0?1:0,D=_(v,x,q);e[p+3]=D;const O=o[r],w=o[r+1],T=o[r+2],S=1/(Math.abs(O)+Math.abs(w)+Math.abs(T));let P=O*S,I=w*S;if(T<0){const F=P;P=(1-Math.abs(I))*(P>=0?1:-1),I=(1-Math.abs(F))*(I>=0?1:-1)}e[p+4]=(P*.5+.5)*65535|0,e[p+5]=(I*.5+.5)*65535|0,e[p+6]=a[V]*65535|0,e[p+7]=a[V+1]*65535|0}return{compressedData:e,positionMin:i,positionMax:g}}self.onmessage=async n=>{const t=performance.now(),{resolution:o,quantize:s}=n.data,a=(o+1)*(o+1),c=new Float32Array(a*3),d=new Float32Array(a*3),e=new Float32Array(a*4),i=new Float32Array(a*2),g=new Uint32Array(o*o*6),h=8,l=.2;let r=0;for(let M=0;M<=o;M++){const y=M*Math.PI/o,u=Math.sin(y),v=Math.cos(y);for(let x=0;x<=o;x++){const q=x*2*Math.PI/o,D=Math.sin(q),O=Math.cos(q),w=1+l*Math.sin(h*q)*Math.sin(h*y),T=O*u*w,S=v*w,P=D*u*w;c[r*3]=T,c[r*3+1]=S,c[r*3+2]=P;const I=O*u,F=v,B=D*u,Y=Math.sqrt(I*I+F*F+B*B);d[r*3]=I/Y,d[r*3+1]=F/Y,d[r*3+2]=B/Y;const U=-P,k=0,L=T,N=Math.sqrt(U*U+k*k+L*L);e[r*4]=U/N,e[r*4+1]=k/N,e[r*4+2]=L/N,e[r*4+3]=1,i[r*2]=x/o,i[r*2+1]=M/o,r++}}r=0;for(let M=0;M<o;M++)for(let y=0;y<o;y++){const u=M*(o+1)+y,v=u+o+1;g[r]=u,g[r+1]=v,g[r+2]=u+1,g[r+3]=v,g[r+4]=v+1,g[r+5]=u+1,r+=6}const f={indices:g,vertexBytes:s?16:3*4+3*4+4*4+2*4,numVertices:a};if(s){const{compressedData:M,positionMin:y,positionMax:u}=Z(a,c,d,e,i);f.quantizedData=M,f.positionMin=y,f.positionMax=u}else f.positions=c,f.normals=d,f.tangents=e,f.uvs=i;const p=performance.now()-t;console.log(`Wavy sphere generation took ${p.toFixed(2)}ms`),self.postMessage(f,{transfer:[...s?[f.quantizedData.buffer,g.buffer]:[c.buffer,d.buffer,e.buffer,i.buffer,g.buffer]]})};
//# sourceMappingURL=wavySphereWorker-7LgYWHM_.js.map
